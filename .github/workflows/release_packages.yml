name: Release packages
on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Matrix job - Create packages and attach them to latest release assets.
  make-package:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        profile: [BASE, MAIN]
        build: [PC, ARM]

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies (Linux)
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'PC'}}
        run: |
          sudo apt-get update -qq && sudo apt-get -y install \
          cmake

      - name: Install dependencies (ARM)
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'ARM'}}
        run: |
          sudo apt-get update -qq && sudo apt-get -y install \
          cmake gcc-arm-linux-gnueabi gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

      - name: Build Linux versions of xeve, generate packages and md5
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'PC'}}
        run: |
          mkdir build
          cd build
          cmake .. -DSET_PROF=${{matrix.profile}} -DBUILD_TYPE=Release
          make
          make package

      - name: Build Windows versions of xeve, generate packages and md5
        if: ${{matrix.os == 'windows-latest' && matrix.build == 'PC'}}
        run: |
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles" -DSET_PROF=${{matrix.profile}} -DBUILD_TYPE=Release
          make
          make package

      - name: Build ARM versions of xeve, generate packages and md5
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'ARM'}}
        run: |
          mkdir build
          cd build
          cmake .. -DSET_PROF=${{matrix.profile}} -DBUILD_TYPE=Release -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_SYSTEM_PROCESSOR=aarch64 -DARM=TRUE
          make
          make package

      - name: 'Upload Linux artifacts'
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'PC'}}
        uses: actions/upload-artifact@v4
        with:
          name: xeve-${{matrix.profile}}-linux-packages-${{github.event.release.tag_name}}
          path: |
            ${{ github.workspace }}/build/*.deb
            ${{ github.workspace }}/build/*.md5
          retention-days: 7

      - name: 'Upload Windows artifacts'
        if: ${{matrix.os == 'windows-latest' && matrix.build == 'PC'}}
        uses: actions/upload-artifact@v4
        with:
          name: xeve-${{matrix.profile}}-windows-packages-${{github.event.release.tag_name}}
          path: |
            ${{ github.workspace }}/build/*.exe
            ${{ github.workspace }}/build/*.md5
          retention-days: 7

      - name: 'Upload ARM artifacts'
        if: ${{matrix.os == 'ubuntu-latest' && matrix.build == 'ARM'}}
        uses: actions/upload-artifact@v4
        with:
          name: xeve-${{matrix.profile}}-ARM-packages-${{github.event.release.tag_name}}
          path: |
            ${{ github.workspace }}/build/*.deb
            ${{ github.workspace }}/build/*.md5
          retention-days: 7

      - name: Upload assets to GitHub Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "build/*.deb; build/*.exe; build/*.md5"
          update_latest_release: true
          draft: false
          overwrite: true
  

