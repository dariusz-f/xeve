# This workfow is responsbile for creating deb package and upload it to launchpad.net

name: Launchpad

on:
  workflow_dispatch:

jobs:
  launchpad:
    runs-on: ubuntu-latest

    # Here golbal variables are set!
    env:
      maintainer_mail: "dkozinsk@interia.pl"
      debemail: "dkozinsk@interia.pl"
      debfullname: "MPEG-5_EVC"
      PPA_URL: "https://launchpad.net/~mpeg5/+archive/ubuntu/xeve"

    steps:
    
    - name: Get sources
      id: vars
      run: |
      
        #Get tag
        TAG=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest | grep "tag_name" | awk -F\" '{print $4}' | cut -c2-)
        echo "TAG=$TAG" >> $GITHUB_OUTPUT

        LOCATION=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest | grep "tarball_url" | awk -F\" '{print $4}')

        #Download file
        curl -L -o xeve-base-$TAG.tar.gz $LOCATION

        tar -xvf xeve-base-$TAG.tar.gz
        rm xeve-base-$TAG.tar.gz
        #TODO: change below line to mpeg5-xeve-*
        mv *-xeve-* xeve-base-$TAG
        tar -czf xeve-base-$TAG.tar.gz xeve-base-$TAG

        echo "Package created form TAG: $TAG :bookmark:" >> $GITHUB_STEP_SUMMARY

    - name: Install dependencies
      run: |
        sudo apt install packaging-dev gnupg

    - name: Prepare package (dh_make)
      run: |
        cd xeve-base-${{ steps.vars.outputs.TAG }}

        DEBEMAIL=${{ env.debemail }}
        DEBFULLNAME=${{ env.debfullname }}
        export DEBEMAIL DEBFULLNAME
        dh_make -f ../xeve-base-${{ steps.vars.outputs.TAG }}.tar.gz -c bsd -e ${{ env.maintainer_mail }} --createorig -l -y

        echo "Debemail in package: ${{ env.debemail }}  :email:" >> $GITHUB_STEP_SUMMARY
        echo "Debfullname in package: ${{ env.debfullname }}  :speech_balloon:" >> $GITHUB_STEP_SUMMARY

    - name: Edit sources (base)
      # TODO: Files from this step have to be later integrated with project repository, they shouldn't be fetched from external repo
      run: |
        cd xeve-base-${{ steps.vars.outputs.TAG }}/debian

        curl -o changelog https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/changelog
        curl -o compat https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/compat
        curl -o control https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/control
        curl -o copyright https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/copyright
        curl -o rules https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/rules
        curl -o xeve-base-dev.install https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/xeve-base-dev.install
        curl -o xeve-base1.install https://raw.githubusercontent.com/dkozinski/xeve/debian-debian/debian/base/debian/xeve-base1.install 

        #Remove example and template files
        rm -rf *.ex
        ls -la
    
    - name: 'Upload executable Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: download
        path: xeve*
        retention-days: 1

    - name: Prepare gpg key
      # https://docs.github.com/en/actions/security-guides/encrypted-secrets#using-encrypted-secrets-in-a-workflow
      env:
        GPG_KEY: ${{ secrets.GPG_KEY_DK }}
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID_DK }}

      run:  |
        echo -e "$GPG_KEY" | gpg --import
        gpg --list-keys

    - name: Debuild
      run: |

        cd xeve-base-${{ steps.vars.outputs.TAG }}
        # DEBEMAIL=${{ env.debemail }}
        # DEBFULLNAME=${{ env.debfullname }}
        # export DEBEMAIL DEBFULLNAME

        #debuild -S -sa -k"$GPG_KEY_ID"
        # OR
        
        dpkg-buildpackage --build=source --no-sign
        debsign -k "$GPG_KEY_ID" ../xeve-base_0.4.3-1ubuntu1.dsc


    - name: Push package to launchpad
      if: ${{ false }}
      run: |
        echo "::notice title={Launchpad push: }::This will push to Launchpad
        # dput ppa:mpeg5/xeve <source.changes>
        echo "Package placed on: $PPA_URL  :globe_with_meridians:" >> $GITHUB_STEP_SUMMARY

